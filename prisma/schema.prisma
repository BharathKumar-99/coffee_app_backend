// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  posts    Post[]
  profile  Profile?
}

model Post {
  id          Int      @id @default(autoincrement())
  name        String
  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int
  description String
  likes       Int
  comments    Int
  createdAt   DateTime @default(now())
  title       String
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  pic    String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Products {
  pid          Int        @id @default(autoincrement())
  name         String
  pic          String
  store        Store      @relation(fields: [storeId], references: [id])
  storeId      Int
  price        String
  discount     String
  quantity     Int
  isOnlineSale Boolean
  categoriesId Int
  Categories   Categories @relation(fields: [categoriesId], references: [id])
  createdAt    DateTime   @default(now())
}

model Store {
  id             Int          @id @default(autoincrement())
  name           String
  Products       Products[]
  longitude      String
  latetude       String
  rating         Int
  phone          String
  email          String
  image          String
  address        String
  showOutOfStock Boolean
  isOnline       Boolean
  Categories     Categories[]
}

model Categories {
  id       Int        @id @default(autoincrement())
  name     String
  Image    String
  storeId  Int
  Store    Store      @relation(fields: [storeId], references: [id])
  Products Products[]
}

model Order {
  id          Int         @id @default(autoincrement())
  paymentType PaymentType @relation(fields: [paymentId], references: [id])
  paymentId   Int
  createdAt   DateTime    @default(now())
  products    Json
  statusId    Int
  status      StatusType  @relation(fields: [statusId], references: [id])
}

model PaymentType {
  id    Int     @id @default(autoincrement())
  name  String
  Order Order[]
}

model StatusType {
  id    Int     @id @default(autoincrement())
  name  String
  Order Order[]
}
